\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{loa}{\addvspace {10\p@ }}
\citation{principles}
\citation{armc}
\citation{metal}
\citation{mona}
\citation{cav06}
\citation{cav06}
\citation{tacas10}
\citation{popl13}
\citation{libvata}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{3}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{introduction}{{1}{3}{Introduction\relax }{chapter.1}{}}
\@writefile{loa}{\addvspace {10\p@ }}
\citation{kozen}
\citation{ullman}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Preliminaries}{5}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{teorie}{{2}{5}{Preliminaries\relax }{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Languages}{5}{section.2.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Finite Automata}{5}{section.2.2}}
\newlabel{defFA}{{2.2}{5}{Finite Automata\relax }{section.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Nondeterministic Finite Automaton}{5}{subsection.2.2.1}}
\newlabel{defNFA}{{2.2.1}{5}{Nondeterministic Finite Automaton\relax }{subsection.2.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces An example of an NFA}}{6}{figure.2.1}}
\newlabel{pic_ex_nfa}{{2.1}{6}{An example of an NFA\relax }{figure.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Deterministic Finite Automaton}{6}{subsection.2.2.2}}
\newlabel{defDFA}{{2.2.2}{6}{Deterministic Finite Automaton\relax }{subsection.2.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Operations over Finite Automata}{6}{subsection.2.2.3}}
\@writefile{toc}{\contentsline {subsubsection}{Automata Union}{6}{section*.2}}
\newlabel{defAUnion}{{2.2.3}{6}{Automata Union\relax }{section*.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces An example of an DFA}}{7}{figure.2.2}}
\newlabel{pic_ex_dfa}{{2.2}{7}{An example of an DFA\relax }{figure.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{Automata Intersection}{7}{section*.3}}
\newlabel{defAInter}{{2.2.3}{7}{Automata Intersection\relax }{section*.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{Automata Product}{7}{section*.4}}
\newlabel{defAutProd}{{2.2.3}{7}{Automata Product\relax }{section*.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{Subset construction}{7}{section*.5}}
\newlabel{subset}{{2.2.3}{7}{Subset construction\relax }{section*.5}{}}
\newlabel{defSubset}{{2.2.3}{7}{Subset construction\relax }{section*.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces A simple example of NFA to DFA conversion via the subset construction. Here is shown small NFA with small $\Sigma $, but for larger NFA could state explosion occur.}}{8}{figure.2.3}}
\newlabel{pic_sub}{{2.3}{8}{A simple example of NFA to DFA conversion via the subset construction. Here is shown small NFA with small $\Sigma $, but for larger NFA could state explosion occur}{figure.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}Run of Finite Automaton}{8}{subsection.2.2.4}}
\newlabel{defRun}{{2.2.4}{8}{Run of Finite Automaton\relax }{subsection.2.2.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.5}Minimal DFA}{8}{subsection.2.2.5}}
\newlabel{defMinDFA}{{2.2.5}{8}{Minimal DFA\relax }{subsection.2.2.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.6}Language of Finite Automaton}{9}{subsection.2.2.6}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Regular Languages}{9}{section.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Closure Properties}{9}{subsection.2.3.1}}
\@writefile{loa}{\addvspace {10\p@ }}
\citation{cav06}
\citation{cav06}
\citation{tacas10}
\citation{popl13}
\citation{focs95}
\citation{cav06}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Inclusion Checking over NFA}{10}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapInclusion}{{3}{10}{Inclusion Checking over NFA\relax }{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}Checking Inclusion with Antichains and Simulation}{10}{section.3.1}}
\newlabel{sectionAntichain}{{3.1}{10}{Checking Inclusion with Antichains and Simulation\relax }{section.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Antichain Algorithm Description}{10}{subsection.3.1.1}}
\citation{tacas10}
\citation{tacas10}
\citation{popl13}
\newlabel{algAntichain}{{1}{11}{Antichain Algorithm Description\relax }{algocfline.1}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Language inclusion checking with antichains and simulations}}{11}{algocf.1}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}Checking Inclusion with Bisimulation up to Congruence}{11}{section.3.2}}
\newlabel{sectionCongr}{{3.2}{11}{Checking Inclusion with Bisimulation up to Congruence\relax }{section.3.2}{}}
\citation{tacas10}
\citation{tacas10}
\citation{popl13}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Congruence Algorithm Description}{12}{subsection.3.2.1}}
\newlabel{subsectCongr}{{3.2.1}{12}{Congruence Algorithm Description\relax }{subsection.3.2.1}{}}
\newlabel{algCongr}{{2}{12}{Congruence Algorithm Description\relax }{algocfline.2}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Language equivalence checking with congruence}}{12}{algocf.2}}
\citation{popl13}
\citation{popl13}
\citation{popl13}
\citation{popl13}
\citation{popl13}
\citation{popl13}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces  \rm  { \hspace  {0.1cm} The figure is based on an example from \cite  {tacas10}. It shows the procedure of checking language inclusion between two NFA using the mentioned approaches (which correspond to the labeled areas). The antichain algorithm reduces number of the generated states compared with the classical, e.g., $(p_2,\{q_1,q_2\})$ is not further explored because $(p_2,\{q_2\}) \sqsubseteq (p_2,\{q_1,q_2\})$. The optimization a and b are improvements of the antichain algorithm using simulation. The congruence algorithm also reduces number of the generated states, so $(\{p_1,p_2\},\{q_1,q_2\})$ is not further explored because it is in congruence closure of the set of visited states.}}}{13}{figure.3.1}}
\newlabel{automata}{{3.1}{13}{ \rm { \hspace {0.1cm} The figure is based on an example from \cite {tacas10}. It shows the procedure of checking language inclusion between two NFA using the mentioned approaches (which correspond to the labeled areas). The antichain algorithm reduces number of the generated states compared with the classical, e.g., $(p_2,\{q_1,q_2\})$ is not further explored because $(p_2,\{q_2\}) \sqsubseteq (p_2,\{q_1,q_2\})$. The optimization a and b are improvements of the antichain algorithm using simulation. The congruence algorithm also reduces number of the generated states, so $(\{p_1,p_2\},\{q_1,q_2\})$ is not further explored because it is in congruence closure of the set of visited states.}\relax }{figure.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Computation of Congruence Closure}{13}{subsection.3.2.2}}
\newlabel{subsectionCongr}{{3.2.2}{13}{Computation of Congruence Closure\relax }{subsection.3.2.2}{}}
\citation{popl13}
\citation{popl13}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces The figure shows two NFA $\mathcal  {A}$, $\mathcal  {B}$ which are used in example describing computation of a congruence closure in figure \ref  {figHKCRew}}}{14}{figure.3.2}}
\newlabel{figHKCex}{{3.2}{14}{The figure shows two NFA $\mathcal {A}$, $\mathcal {B}$ which are used in example describing computation of a congruence closure in figure \ref {figHKCRew}\relax }{figure.3.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces The figure (taken from \cite  {popl13}) shows the deriving of the normal forms of the sets $\{x,y\}$ and $\{u\}$ using rewriting rules of the macrostates of a relation $R=\{(\{x\},\{u\}),(\{y,z\},\{u\})\}$.}}{14}{figure.3.3}}
\newlabel{figHKCRew}{{3.3}{14}{The figure (taken from \cite {popl13}) shows the deriving of the normal forms of the sets $\{x,y\}$ and $\{u\}$ using rewriting rules of the macrostates of a relation $R=\{(\{x\},\{u\}),(\{y,z\},\{u\})\}$}{figure.3.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{Optimization for Inclusion Checking}{14}{section*.6}}
\newlabel{congrOpt}{{3.2.2}{14}{Optimization for Inclusion Checking\relax }{section*.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces The figure shows the deriving of the normal form the set $\{u\}$ using rewriting rules of the elements of a relation $R=\{(\{x,u\},\{u\}),(\{y,z,u\},\{u\})\}$.}}{15}{figure.3.4}}
\newlabel{figHKCRewO}{{3.4}{15}{The figure shows the deriving of the normal form the set $\{u\}$ using rewriting rules of the elements of a relation $R=\{(\{x,u\},\{u\}),(\{y,z,u\},\{u\})\}$}{figure.3.4}{}}
\@writefile{loa}{\addvspace {10\p@ }}
\citation{brics}
\citation{libfa}
\citation{fare}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Existing Finite Automata Libraries and the VATA Library}{16}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{libraries}{{4}{16}{Existing Finite Automata Libraries and the VATA Library\relax }{chapter.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Existing Finite Automata Libraries}{16}{section.4.1}}
\newlabel{existinglibraries}{{4.1}{16}{Existing Finite Automata Libraries\relax }{section.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}dk.brics.automaton}{16}{subsection.4.1.1}}
\newlabel{brics}{{4.1.1}{16}{dk.brics.automaton\relax }{subsection.4.1.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{libfa}{16}{section*.7}}
\citation{kanthakN04}
\citation{rwth}
\citation{cav06}
\citation{tacas10}
\citation{libvata}
\@writefile{toc}{\contentsline {subsubsection}{Fare}{17}{section*.8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}The RWHT FSA toolkit}{17}{subsection.4.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.3}Implementation of the State-of-the-art Algorithms}{17}{subsection.4.1.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}VATA library}{17}{section.4.2}}
\newlabel{VATA}{{4.2}{17}{VATA library\relax }{section.4.2}{}}
\citation{libvata}
\citation{libvata}
\citation{libvata}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces The VATA library design. The image is taken from \cite  {libvata}}}{18}{figure.4.1}}
\newlabel{picVataDesign}{{4.1}{18}{The VATA library design. The image is taken from \cite {libvata}\relax }{figure.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Design}{18}{subsection.4.2.1}}
\newlabel{sectionDesignVata}{{4.2.1}{18}{Design\relax }{subsection.4.2.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{Explicit Encoding}{18}{section*.9}}
\newlabel{sectionExplicitEnc}{{4.2.1}{18}{Explicit Encoding\relax }{section*.9}{}}
\citation{libvata}
\citation{libvata}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces The data structure for storing transitions of the tree automaton. There is a hash table (top-level look-up table) which map a state to the pointer to another hash table (transition cluster). Transition cluster maps a symbols of input alphabet to the pointer to the set of pointers to the tuples of states.}}{19}{figure.4.2}}
\newlabel{figExplicitTreeDataStr}{{4.2}{19}{The data structure for storing transitions of the tree automaton. There is a hash table (top-level look-up table) which map a state to the pointer to another hash table (transition cluster). Transition cluster maps a symbols of input alphabet to the pointer to the set of pointers to the tuples of states}{figure.4.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{Semi-symbolic Encoding}{19}{section*.10}}
\citation{cav06}
\citation{tacas10}
\citation{libvata}
\citation{libvata}
\@writefile{toc}{\contentsline {subsubsection}{Operations}{20}{section*.11}}
\@writefile{lot}{\contentsline {table}{\numberline {4.1}{\ignorespaces Table shows which operations are supported for the tree automata in the encodings implemented in VATA library.}}{20}{table.4.1}}
\newlabel{tabOp}{{4.1}{20}{Table shows which operations are supported for the tree automata in the encodings implemented in VATA library}{table.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Extension for Finite Automata}{20}{subsection.4.2.2}}
\@writefile{loa}{\addvspace {10\p@ }}
\citation{libvata}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Design}{22}{chapter.5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{design}{{5}{22}{Design\relax }{chapter.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Data Structures for Explicit Encoding of Finite Automata}{22}{section.5.1}}
\newlabel{data structure explicit}{{5.1}{22}{Data Structures for Explicit Encoding of Finite Automata\relax }{section.5.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}Analysis}{22}{subsection.5.1.1}}
\newlabel{analysis}{{5.1.1}{22}{Analysis\relax }{subsection.5.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}Design of Data Structure for Transitions of NFA}{23}{subsection.5.1.2}}
\citation{timbuk}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces The data structure for storing transition of an finite automaton. There is a hash table (top-level look-up table) which map a state of a FA to the pointer to another hash table (transition cluster). Transition cluster maps a symbol of the input alphabet to a set of states.}}{24}{figure.5.1}}
\newlabel{figExplicitFADataStr}{{5.1}{24}{The data structure for storing transition of an finite automaton. There is a hash table (top-level look-up table) which map a state of a FA to the pointer to another hash table (transition cluster). Transition cluster maps a symbol of the input alphabet to a set of states}{figure.5.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}Data Structure for Start and Final States}{24}{section.5.2}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}Translation of the States and Symbols}{24}{section.5.3}}
\newlabel{sectionTranslate}{{5.3}{24}{Translation of the States and Symbols\relax }{section.5.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.4}Usage of the Timbuk Format}{24}{section.5.4}}
\newlabel{usageTimbuk}{{5.4}{24}{Usage of the Timbuk Format\relax }{section.5.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.2}{\ignorespaces The figure shows a principle of the translation of the input format to the internal representation by a hash table. The states (the left hash table) or of the symbols (the right hash table) of a NFA are mapped from strings to the integers.}}{25}{figure.5.2}}
\newlabel{figExplicitFATransl}{{5.2}{25}{The figure shows a principle of the translation of the input format to the internal representation by a hash table. The states (the left hash table) or of the symbols (the right hash table) of a NFA are mapped from strings to the integers}{figure.5.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.5}Algorithms for Basic Operations}{25}{section.5.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.1}Union}{25}{subsection.5.5.1}}
\@writefile{toc}{\contentsline {subsubsection}{Union of Disjunct States}{26}{section*.12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.2}Intersection}{26}{subsection.5.5.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.3}Reverse}{26}{subsection.5.5.3}}
\newlabel{algRev}{{4}{26}{Reverse\relax }{algocfline.4}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Algorithm for reverting of an NFA}}{26}{algocf.4}}
\newlabel{algIntersection}{{3}{27}{Intersection\relax }{algocfline.3}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Algorithm for intersection of NFA}}{27}{algocf.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.4}Removing Unreachable States}{27}{subsection.5.5.4}}
\newlabel{algRemove}{{5}{28}{Removing Unreachable States\relax }{algocfline.5}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Algorithm for removing the unreachable states of NFA}}{28}{algocf.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.5}Removing Useless States}{28}{subsection.5.5.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.6}Get Candidate}{28}{subsection.5.5.6}}
\newlabel{algCandidate}{{6}{29}{Get Candidate\relax }{algocfline.6}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces Algorithm for getting witness in NFA}}{29}{algocf.6}}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Implementation}{30}{chapter.6}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{implementation}{{6}{30}{Implementation\relax }{chapter.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Loading and Manipulation with Finite Automata in the Explicit Encoding}{30}{section.6.1}}
\@writefile{toc}{\contentsline {section}{\numberline {6.2}Used Modules of the VATA Library}{30}{section.6.2}}
\@writefile{toc}{\contentsline {subsubsection}{Parser and Serializer}{30}{section*.13}}
\@writefile{toc}{\contentsline {subsubsection}{Simulation}{31}{section*.14}}
\@writefile{toc}{\contentsline {subsubsection}{Utilities}{31}{section*.15}}
\@writefile{toc}{\contentsline {section}{\numberline {6.3}Macrostate Cache}{31}{section.6.3}}
\newlabel{sectionCache}{{6.3}{31}{Macrostate Cache\relax }{section.6.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces This figure shows the macrostate cache based on a hash table where key is the sum of a macrostate and a value is a list of the macrostates.}}{32}{figure.6.1}}
\newlabel{figMacroCache}{{6.1}{32}{This figure shows the macrostate cache based on a hash table where key is the sum of a macrostate and a value is a list of the macrostates}{figure.6.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.4}Implementation of Antichain Algorithm}{32}{section.6.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4.1}Separating Antichain Comparator}{32}{subsection.6.4.1}}
\citation{libvata}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4.2}Using Macrostate Cache}{33}{subsection.6.4.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4.3}Ordered Antichain}{33}{subsection.6.4.3}}
\@writefile{toc}{\contentsline {section}{\numberline {6.5}Translation of an NFA to LTS}{33}{section.6.5}}
\@writefile{toc}{\contentsline {section}{\numberline {6.6}Implementation of Bisimulation up to Congruence Algorithm}{33}{section.6.6}}
\newlabel{sectionCongrImpl}{{6.6}{33}{Implementation of Bisimulation up to Congruence Algorithm\relax }{section.6.6}{}}
\citation{taocp}
\citation{taocp}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6.1}Exploring Product NFA}{34}{subsection.6.6.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6.2}Using Macrostate cache}{34}{subsection.6.6.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6.3}Computing Congruence Closure for Equivalence Checking}{34}{subsection.6.6.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6.4}Computing Congruence Closure for Inclusion Checking}{35}{subsection.6.6.4}}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}Experimental Evaluation}{36}{chapter.7}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{eval}{{7}{36}{Experimental Evaluation\relax }{chapter.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}Evaluation of Algorithm Based on Antichains}{36}{section.7.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.1}{\ignorespaces The comparison of VATA library implementation of antichain algorithm for tree automata in upward direction with VATA library implementation of the antichain algorithm for NFA.}}{37}{figure.7.1}}
\newlabel{fig:figPlotAac}{{7.1}{37}{The comparison of VATA library implementation of antichain algorithm for tree automata in upward direction with VATA library implementation of the antichain algorithm for NFA}{figure.7.1}{}}
\@writefile{lot}{\contentsline {table}{\numberline {7.1}{\ignorespaces The left table shows comparison of VATA library for tree automata with checking inclusion upward with antichain algorithm with implementation of the antichain algorithm for NFA and the right table shows the same comparison but with for the downward version of the antichain tree automata's algorithm optimized by cache.}}{37}{table.7.1}}
\newlabel{tabAac}{{7.1}{37}{The left table shows comparison of VATA library for tree automata with checking inclusion upward with antichain algorithm with implementation of the antichain algorithm for NFA and the right table shows the same comparison but with for the downward version of the antichain tree automata's algorithm optimized by cache}{table.7.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.2}Evaluation of Algorithm Based on Bisimulation up to Congruence}{37}{section.7.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.1}Comparison with OCaml Implementation}{37}{subsection.7.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.2}{\ignorespaces The figure shows comparison of VATA library implementation of the antichain algorithm for tree automata in downward direction using cache optimization with VATA library implementation of the antichain algorithm for NFA.}}{38}{figure.7.2}}
\newlabel{fig:figPlotAca}{{7.2}{38}{The figure shows comparison of VATA library implementation of the antichain algorithm for tree automata in downward direction using cache optimization with VATA library implementation of the antichain algorithm for NFA}{figure.7.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.3}{\ignorespaces  Comparison of OCaml implementation of a congruence algorithm and VATA library implementation of the algorithm.}}{38}{figure.7.3}}
\newlabel{fig:figGraphOCaml}{{7.3}{38}{ Comparison of OCaml implementation of a congruence algorithm and VATA library implementation of the algorithm}{figure.7.3}{}}
\@writefile{lot}{\contentsline {table}{\numberline {7.2}{\ignorespaces Table gives summarizing of the evaluation of comparing of OCaml implementation of a congruence algorithm and VATA library implementation of the algorithm.}}{39}{table.7.2}}
\newlabel{tabOcaml}{{7.2}{39}{Table gives summarizing of the evaluation of comparing of OCaml implementation of a congruence algorithm and VATA library implementation of the algorithm}{table.7.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.4}{\ignorespaces The comparison of VATA library implementation of the antichain algorithm for tree automata in upward direction with VATA library implementation of the congruence algorithm for NFA.}}{39}{figure.7.4}}
\newlabel{fig:figPlotAc}{{7.4}{39}{The comparison of VATA library implementation of the antichain algorithm for tree automata in upward direction with VATA library implementation of the congruence algorithm for NFA}{figure.7.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.2}Comparison with Tree Automata Implementation of VATA Library}{39}{subsection.7.2.2}}
\@writefile{lot}{\contentsline {table}{\numberline {7.3}{\ignorespaces The left table shows comparison of VATA library for tree automata with checking inclusion upward with antichain algorithm with implementation of the algorithm based on bisimulation up to congruence and the right table shows the same comparison but with for the downward version of the antichain algorithm optimized by cache.}}{40}{table.7.3}}
\newlabel{tabAc}{{7.3}{40}{The left table shows comparison of VATA library for tree automata with checking inclusion upward with antichain algorithm with implementation of the algorithm based on bisimulation up to congruence and the right table shows the same comparison but with for the downward version of the antichain algorithm optimized by cache}{table.7.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.5}{\ignorespaces The figure shows comparison of VATA library implementation of the antichain algorithm for tree automata in downward direction using cache optimization with VATA library implementation of the congruence algorithm for NFA.}}{40}{figure.7.5}}
\newlabel{fig:figPlotCa}{{7.5}{40}{The figure shows comparison of VATA library implementation of the antichain algorithm for tree automata in downward direction using cache optimization with VATA library implementation of the congruence algorithm for NFA}{figure.7.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.3}Comparison of the algorithm for NFA}{40}{section.7.3}}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{lot}{\contentsline {table}{\numberline {7.4}{\ignorespaces Table shows result of comparison of the congruence algorithm and the antichain algorithm for NFA.}}{40}{table.7.4}}
\newlabel{tabNFA}{{7.4}{40}{Table shows result of comparison of the congruence algorithm and the antichain algorithm for NFA}{table.7.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7.6}{\ignorespaces The comparison of VATA library implementation of the antichain algorithm for NFA (the left plot) with VATA library implementation of the congruence algorithm for NFA (the right plot).}}{41}{figure.7.6}}
\newlabel{fig:figPlotNFA}{{7.6}{41}{The comparison of VATA library implementation of the antichain algorithm for NFA (the left plot) with VATA library implementation of the congruence algorithm for NFA (the right plot)}{figure.7.6}{}}
\bibstyle{plain}
\bibdata{literatura}
\@writefile{toc}{\contentsline {chapter}{\numberline {8}Conclusion}{42}{chapter.8}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{concl}{{8}{42}{Conclusion\relax }{chapter.8}{}}
\@writefile{loa}{\addvspace {10\p@ }}
\bibcite{tacas10}{1}
\bibcite{principles}{2}
\bibcite{fare}{3}
\bibcite{popl13}{4}
\bibcite{armc}{5}
\bibcite{metal}{6}
\bibcite{mona}{7}
\bibcite{focs95}{8}
\bibcite{ullman}{9}
\bibcite{kanthakN04}{10}
\bibcite{rwth}{11}
\bibcite{taocp}{12}
\bibcite{kozen}{13}
\bibcite{libvata}{14}
\bibcite{libfa}{15}
\bibcite{brics}{16}
\bibcite{timbuk}{17}
\bibcite{cav06}{18}
\@writefile{loa}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {chapter}{\numberline {A}Storage Medium}{45}{appendix.A}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
